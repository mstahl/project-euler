-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms.
-- 
-- Starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21,
-- 34, 55, 89.
-- 
-- Every positive integer can be uniquely written as a sum of nonconsecutive
-- terms of the Fibonacci sequence. For example, 100 = 3 + 8 + 89.
-- 
-- Such a sum is called the Zeckendorf representation of the number.
-- 
-- For any integer n>0, let z(n) be the number of terms in the Zeckendorf
-- representation of n.
-- 
-- Thus, z(5) = 1, z(14) = 2, z(100) = 3 etc.
-- 
-- Also, for 0<n<10^(6), ∑ z(n) = 7894453.
-- 
-- Find ∑ z(n) for 0<n<10^(17).
-- 
-- http://projecteuler.net/index.php?section=problems&id=297

module Main where

fibonaccis = 1 : 2 : zipWith (+) fibonaccis (tail fibonaccis)

z 0 = 0
z n = 1 + (z (n - f))
      where f = last $ takeWhile (<=n) fibonaccis

limit = (10 ^ 8) - 1

main :: IO ()
main = do print $ sum [z n | n <- [1..limit]]