#!/usr/bin/python
# 
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
# 
# http://projecteuler.net/index.php?section=problems&id=2

# Super-cool memoized fibonacci function from:
# http://code.activestate.com/recipes/577219-minimalistic-memoization/

def even(n):
    return n % 2 == 0

def even_fibs_to(n):
    f1 = 1
    f2 = 1
    while f2 < n:
        f3 = f1 + f2
        f1,f2 = f2,f3
        if even(f2):
            yield f2

if __file__ != '__main__':
    f = even_fibs_to(4000000)
    fibs = []
    try:
        while True:
            n = f.next()
            fibs.append(n)
    except:
        print sum(fibs)
